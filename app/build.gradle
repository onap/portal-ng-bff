apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'jacoco'
apply plugin: 'com.diffplug.spotless'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation project(':openapi:server')
    implementation project(':openapi:client-portal-prefs')
    implementation project(':openapi:client-portal-history')
    implementation project(':openapi:client-portal-keycloak')

    implementation project(':lib')

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.zalando:problem:$problemVersion"
    implementation "org.zalando:jackson-datatype-problem:$problemVersion"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation "org.zalando:problem-spring-webflux:$problemSpringVersion"

    implementation "org.mapstruct:mapstruct:$mapStructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"
    implementation "org.mapstruct.extensions.spring:mapstruct-spring-annotations:$mapStructExtensionsVersion"
    implementation "org.mapstruct.extensions.spring:mapstruct-spring-extensions:$mapStructExtensionsVersion"

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured'
}

mainClassName = 'org.onap.portalng.bff.Application'

bootJar {
    launchScript()
    enabled = true
    excludes = ['**/application-local.yml', '**/application-development.yml', '**/log4j.xml']
}

springBoot {
    buildInfo {
        properties {
            artifact = 'org-onap-portalng-bff'
            version = getVersion()
            group = rootProject.group
            name = 'ONAP portal backend for frontend community edition'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

configurations.implementation.setCanBeResolved(true)

spotless {
    java {
        removeUnusedImports()
        trimTrailingWhitespace()
        googleJavaFormat('1.15.0')
    }
}

tasks.withType(JavaCompile) {
    dependsOn 'spotlessApply'
}