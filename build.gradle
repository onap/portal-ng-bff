import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    ext {
        springBootVersion = '2.7.3'
        springCloudVersion = '3.1.3'
        lombokVersion = '1.18.24'
        openapiVersion = '6.6.0'
        redocVersion = '2.0.0-rc.65'
        spotlessVersion = '6.10.0'
        spotbugsVersion = '5.0.10'
        problemVersion = '0.27.1'
        problemSpringVersion = '0.27.0'
        logstashLogbackVersion = '7.2'
        mapStructVersion = '1.5.2.Final'
        mapStructExtensionsVersion = '0.1.2'
        gorylenkoVersion= '2.4.1'
        licenseVersion = '0.16.1'
        shadowVersion = '7.1.2'
    }

    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
        classpath "com.github.spotbugs.snom:spotbugs-gradle-plugin:$spotbugsVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.openapitools:openapi-generator-gradle-plugin:$openapiVersion"
        classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:$gorylenkoVersion"
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:$licenseVersion"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:$shadowVersion"
    }
}

group = 'org.onap'
version = rootProject.file('version').text.trim()

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    

    sourceCompatibility = 17
    targetCompatibility = 17

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-logging"
        implementation "net.logstash.logback:logstash-logback-encoder:$logstashLogbackVersion"

        compileOnly             "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor     "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly         "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    }
}